# /*******************************************************************************
#  * Copyright 2020 Redis Labs Inc.
#  * Copyright 2021 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *******************************************************************************/

# NOTE:  this Docker Compose file does not contain the security services required to run in secure mode

version: "3.7"

networks:
    edgex-network:
        driver: "bridge"

volumes:
    db-data:
    consul-config:
    consul-data:
    kuiper-data:

services:
    consul:
        image: consul:${CONSUL_VERSION}
        user: "root:root" # Note that Consul is run under the 'consul' user, but entry point scripts need to first run as root
        ports:
            - "127.0.0.1:8500:8500"
        container_name: edgex-core-consul
        hostname: edgex-core-consul
        read_only: true
        networks:
            edgex-network:
        volumes:
            - consul-config:/consul/config:z
            - consul-data:/consul/data:z
        security_opt:
            - no-new-privileges:true

    database:
        image: redis:${REDIS_VERSION}
        user: "root:root" # Note that Redis is run under the 'redis' user, but entry point scripts need to first run as root
        ports:
            - "127.0.0.1:6379:6379"
        container_name: edgex-redis
        hostname: edgex-redis
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        volumes:
            - db-data:/data:z
        security_opt:
            - no-new-privileges:true

    system:
        image: ${CORE_EDGEX_REPOSITORY}/sys-mgmt-agent${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "root:root" # must run as root to allow binding to docker socket.
        ports:
            - "127.0.0.1:58890:58890"
        container_name: edgex-sys-mgmt-agent
        hostname: edgex-sys-mgmt-agent
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-sys-mgmt-agent
            EXECUTORPATH: /sys-mgmt-executor
            METRICSMECHANISM: executor
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:z
        depends_on:
            - consul
            - scheduler
            - notifications
            - metadata
            - data
            - command
        security_opt:
            - no-new-privileges:true
            - label:disable # needed for CentOS to provide docker access

    notifications:
        image: ${CORE_EDGEX_REPOSITORY}/support-notifications${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59860:59860"
        container_name: edgex-support-notifications
        hostname: edgex-support-notifications
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-support-notifications
        depends_on:
            - consul
            - database
        security_opt:
            - no-new-privileges:true

    metadata:
        image: ${CORE_EDGEX_REPOSITORY}/core-metadata${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59881:59881"
        container_name: edgex-core-metadata
        hostname: edgex-core-metadata
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-core-metadata
            NOTIFICATIONS_SENDER: edgex-core-metadata
        depends_on:
            - consul
            - database
            - notifications
        security_opt:
            - no-new-privileges:true

    data:
        image: ${CORE_EDGEX_REPOSITORY}/core-data${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59880:59880"
            - "127.0.0.1:5563:5563"
        container_name: edgex-core-data
        hostname: edgex-core-data
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-core-data
            MESSAGEQUEUE_HOST: edgex-redis
        depends_on:
            - consul
            - database
            - metadata
        security_opt:
            - no-new-privileges:true

    command:
        image: ${CORE_EDGEX_REPOSITORY}/core-command${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59882:59882"
        container_name: edgex-core-command
        hostname: edgex-core-command
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-core-command
        depends_on:
            - consul
            - database
            - metadata
        security_opt:
            - no-new-privileges:true

    scheduler:
        image: ${CORE_EDGEX_REPOSITORY}/support-scheduler${ARCH}:${CORE_EDGEX_VERSION}${DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59861:59861"
        container_name: edgex-support-scheduler
        hostname: edgex-support-scheduler
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            SERVICE_HOST: edgex-support-scheduler
            INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
            INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
        depends_on:
            - consul
            - database
        security_opt:
            - no-new-privileges:true

    app-service-rules:
        image: ${APP_SVC_REPOSITORY}/app-service-configurable${ARCH}:${APP_SERVICE_CONFIG_VERSION}${APP_SVC_DEV}
        user: "${EDGEX_USER}:${EDGEX_GROUP}"
        ports:
            - "127.0.0.1:59701:59701"
        container_name: edgex-app-rules-engine
        hostname: edgex-app-rules-engine
        read_only: true
        networks:
            - edgex-network
        env_file:
            - common.env
        environment:
            EDGEX_PROFILE: rules-engine
            SERVICE_HOST: edgex-app-rules-engine
            TRIGGER_EDGEXMESSAGEBUS_SUBSCRIBEHOST_HOST: edgex-redis
            TRIGGER_EDGEXMESSAGEBUS_PUBLISHHOST_HOST: edgex-redis
        depends_on:
            - consul
            - data
        security_opt:
            - no-new-privileges:true

    rulesengine:
        image: lfedge/ekuiper:${KUIPER_VERSION}
        user: "kuiper:kuiper"
        ports:
            - "127.0.0.1:59720:59720"
        container_name: edgex-kuiper
        hostname: edgex-kuiper
        read_only: true
        networks:
            - edgex-network
        volumes:
            - kuiper-data:/kuiper/data:z
        environment:
            #      KUIPER__BASIC__DEBUG: "true"
            KUIPER__BASIC__CONSOLELOG: "true"
            KUIPER__BASIC__RESTPORT: 59720
            EDGEX__DEFAULT__TYPE: redis
            EDGEX__DEFAULT__SERVER: edgex-redis
            EDGEX__DEFAULT__PROTOCOL: redis
            EDGEX__DEFAULT__PORT: 6379
            EDGEX__DEFAULT__TOPIC: rules-events
        depends_on:
            - database
        security_opt:
            - no-new-privileges:true
